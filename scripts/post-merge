#!/bin/bash
# Redirect output to stderr.
exec 1>&2

LOG_DIR="/var/log/labcraft"; if [[ ! -d "$LOG_DIR" ]];then mkdir -p "$LOG_DIR"; fi
NTFY_ADDRESS="https://ntfy.carnivuth.org/homelab"

function run_pb(){
  if [[ ! -f "playbooks/$1.yml" ]]; then
    echo "no $1 playbook found" >> "$LOG_DIR/common.log"
  else
    source env/bin/activate
    curl "$NTFY_ADDRESS" -d "running $1 playbook"
    ansible-playbook -i inventory/inventory.proxmox.yml "playbooks/$1.yml" >> "$LOG_DIR/$1.log"
  fi
}

# check if last commit contains something that has playbooks in the name and run all playbooks
PB=playbooks
if git diff --name-only HEAD HEAD~1 | grep "$PB" || git diff --name-only HEAD HEAD~1 | grep "scripts" ; then

  # run ansible-playbooks
  run_pb common
  run_pb backupper
  run_pb pwmanager
  run_pb service_manager
  run_pb reverse_proxy
else
  curl "$NTFY_ADDRESS" -d "no $PB modified, nothing to do"
fi

# check if last commit contains something that has terraform in the name and run terraform and dns playbook
PB=terraform
if git diff --name-only HEAD HEAD~1 | grep "$PB" || git diff --name-only HEAD HEAD~1 | grep "scripts" ; then
  # run terraform
  cd terraform
  timestamp="$(date +%s)"
  terraform plan -out "$LOG_DIR/terraform.$timestamp.plan.log" >> "$LOG_DIR/terraform.log" && terraform apply -auto-approve "$LOG_DIR/terraform.$timestamp.plan.log" >> "$LOG_DIR/terraform.log"

  # reconfigure dns
  cd .. && (run_pb dns; run_pb common)
  curl "$NTFY_ADDRESS" -d "labcraft terraform run $timestamp ended"
else
  curl "$NTFY_ADDRESS" -d "no $PB modified, nothing to do"
fi
