---
- name: Run common role on all nodes
  hosts: all
  become: true
  vars:
    arch_packages:
      - vim
      - neofetch
      - figlet
      - tmux
      - net-tools
    deb_packages:
      - vim
      - neofetch
      - figlet
      - tmux
      - net-tools

  tasks:
    - name: Update packages
      block:
        - name: Remove dependencies that are no longer required and purge their configuration files (apt distros)
          when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
          ansible.builtin.apt:
            autoremove: true
            purge: true

        - name: Update all packages to their latest version (apt distros)
          when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
          ansible.builtin.apt:
            upgrade: true
            update_cache: true

        - name: Update all packages to their latest version (pacman distros)
          when: ansible_distribution == "Archlinux"
          community.general.pacman:
            upgrade: true
            update_cache: true

        - name: Install some default packages (pacman distros)
          when: ansible_distribution == "Archlinux"
          community.general.pacman:
            name: "{{ arch_packages }}"
            state: present

        - name: Install some default packages (apt distros)
          when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
          ansible.builtin.apt:
            name: "{{ deb_packages }}"
            state: present
            update_cache: true

        - name: Copy motd script for presentation
          ansible.builtin.copy:
            src: files/motd.sh
            dest: /etc/motd.sh
            mode: '755'

        - name: Add motd in /etc/profile
          ansible.builtin.lineinfile:
            path: /etc/profile
            line: source '/etc/motd.sh'
            state: present

        - name: Send ntfy.sh update
          ansible.builtin.uri:
            url: "{{ ntfy_endpoint }}"
            method: POST
            body: "{{ inventory_hostname }} common playbook completed"
      rescue:
        - name: Send ntfy.sh notification of failed nodes
          ansible.builtin.uri:
            url: "{{ ntfy_endpoint }}"
            method: POST
            body: " update failed on host {{ inventory_hostname }}"
