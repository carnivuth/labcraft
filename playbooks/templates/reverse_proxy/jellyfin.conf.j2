map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
  listen              443 ssl;
  server_name          {{ app }}.{{ dns_public_domain_name }};

  ssl_certificate     /etc/letsencrypt/live/{{ app }}.{{ dns_public_domain_name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ app }}.{{ dns_public_domain_name }}/privkey.pem;
  ssl_protocols       tlsv1 tlsv1.1 tlsv1.2 tlsv1.3;

  access_log      /var/log/nginx/access.log;
  error_log       /var/log/nginx/error.log;

  # pass through headers from nextcloud that nginx considers invalid
  ignore_invalid_headers off;
  add_header x-content-type-options "nosniff";
  client_max_body_size 20m;
  # permissions policy. may cause issues with some clients
  add_header permissions-policy "accelerometer=(), ambient-light-sensor=(), battery=(), bluetooth=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), gamepad=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), keyboard-map=(), local-fonts=(), magnetometer=(), microphone=(), payment=(), publickey-credentials-get=(), serial=(), sync-xhr=(), usb=(), xr-spatial-tracking=()" always;

  # content security policy
  # see: https://developer.mozilla.org/en-us/docs/web/http/csp
  # enforces https content and restricts js/css to origin
  # external javascript (such as cast_sender.js for chromecast) must be whitelisted.
  add_header content-security-policy "default-src https: data: blob: ; img-src 'self' https://* ; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com https://www.youtube.com blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self'; font-src 'self'";

  location / {
      # proxy main jellyfin traffic
      proxy_pass http://{{ service_manager_address }}:{{ exposed_port }};
      proxy_set_header host $host;
      proxy_set_header x-real-ip $remote_addr;
      proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
      proxy_set_header x-forwarded-proto $scheme;
      proxy_set_header x-forwarded-protocol $scheme;
      proxy_set_header x-forwarded-host $http_host;

      # disable buffering when the nginx proxy gets very resource heavy upon streaming
      proxy_buffering off;
  }

location /socket {
        # proxy jellyfin websockets traffic
        proxy_pass http://{{ service_manager_address }}:{{ exposed_port }};
        proxy_http_version 1.1;
        proxy_set_header upgrade $http_upgrade;
        proxy_set_header connection "upgrade";
        proxy_set_header host $host;
        proxy_set_header x-real-ip $remote_addr;
        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
        proxy_set_header x-forwarded-proto $scheme;
        proxy_set_header x-forwarded-protocol $scheme;
        proxy_set_header x-forwarded-host $http_host;
    }
}
