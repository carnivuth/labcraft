
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
server {
    listen              443 ssl;
    server_name          {{ app }}.{{ dns_public_domain_name }};

    ssl_certificate     /etc/letsencrypt/live/{{ dns_public_domain_name }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ dns_public_domain_name }}/privkey.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;


  access_log      /var/log/nginx/access.log;
  error_log       /var/log/nginx/error.log;

  # pass through headers from Nextcloud that Nginx considers invalid
  ignore_invalid_headers off;

location /{

    # Proxy the modified request to the backend application
    proxy_pass http://{{ service_manager_address }}:{{ exposed_port }};

    # Optional: Set headers that might be required by the backend or for compliance with CORS, etc.
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Handle WebSocket upgrades if your application uses WebSockets
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    }
}
